{"showTimer":false,"isDarkMode":true,"disableAds":false,"questionsSolved":[{"id":0,"skipped":false,"userSolution":"select first_name, last_name, gender from patients where gender = 'M';","hints":1,"solvedTime":411009,"completedWithoutSkipping":false},{"id":1,"skipped":false,"userSolution":"select first_name, last_name from patients where  allergies IS null;","hints":1,"solvedTime":16329995,"completedWithoutSkipping":false},{"id":2,"skipped":false,"userSolution":"select first_name from patients where first_name LIKE 'c%';","hints":1,"solvedTime":513000,"completedWithoutSkipping":true},{"id":3,"skipped":false,"userSolution":"select first_name, last_name from patients\nwhere weight between 100 AND 120;","hints":2,"solvedTime":850000,"completedWithoutSkipping":true},{"id":4,"skipped":false,"userSolution":"update patients SET allergies= 'NKA'  where allergies IS null;","hints":1,"solvedTime":157006,"completedWithoutSkipping":true},{"id":5,"skipped":false,"userSolution":"SELECT\n  CONCAT(first_name, ' ', last_name) AS full_name\nFROM patients;","hints":1,"solvedTime":253001,"completedWithoutSkipping":false},{"id":6,"skipped":false,"userSolution":"select first_name, last_name, province_name from patients\njoin province_names on province_names.province_id = patients.province_id;","hints":3,"solvedTime":305003,"completedWithoutSkipping":false},{"id":23,"skipped":false,"userSolution":"select count(*) from patients where year(birth_date) = 2010;","hints":1,"solvedTime":3374994,"completedWithoutSkipping":true},{"id":33,"skipped":false,"userSolution":"select first_name, last_name,max(height) from patients;","hints":1,"solvedTime":130000,"completedWithoutSkipping":true},{"id":34,"skipped":false,"userSolution":"select * from patients where patient_id in (1,45,534,879,1000);","hints":1,"solvedTime":113001,"completedWithoutSkipping":true},{"id":35,"skipped":false,"userSolution":"select count(patient_id) from admissions;","hints":1,"solvedTime":60008,"completedWithoutSkipping":true},{"id":41,"skipped":false,"userSolution":"select * from admissions where admission_date = discharge_date;","hints":1,"solvedTime":88002,"completedWithoutSkipping":true},{"id":42,"skipped":false,"userSolution":"select patient_id, count(patient_id) from admissions where patient_id = 579;","hints":1,"solvedTime":255001,"completedWithoutSkipping":true},{"id":32,"skipped":false,"userSolution":"select distinct(city) from patients where province_id = 'NS';","hints":2,"solvedTime":102002,"completedWithoutSkipping":true},{"id":45,"skipped":false,"userSolution":"select first_name, last_name, birth_date from patients\nwhere height > 160 and weight > 70;","hints":1,"solvedTime":105014,"completedWithoutSkipping":true},{"id":46,"skipped":false,"userSolution":"select first_name, last_name, allergies from patients \nwhere allergies not null and city= 'Hamilton';","hints":2,"solvedTime":204000,"completedWithoutSkipping":true},{"id":7,"skipped":false,"userSolution":"select distinct(year(birth_date)) from  patients  order by birth_date asc;","hints":2,"solvedTime":217000,"completedWithoutSkipping":true},{"id":8,"skipped":false,"userSolution":"SELECT first_name\nFROM patients\nGROUP BY first_name\nHAVING COUNT(first_name) = 1","hints":1,"solvedTime":8965995,"completedWithoutSkipping":false},{"id":9,"skipped":false,"userSolution":"select patient_id, first_name from patients \nwhere first_name like 's____%s';","hints":1,"solvedTime":176004,"completedWithoutSkipping":true},{"id":10,"skipped":false,"userSolution":"SELECT\n  patients.patient_id,\n  first_name,\n  last_name\nFROM patients\n  JOIN admissions ON admissions.patient_id = patients.patient_id\nWHERE diagnosis = 'Dementia';","hints":1,"solvedTime":4650002,"completedWithoutSkipping":false},{"id":11,"skipped":false,"userSolution":"select first_name from patients order by len(first_name), first_name asc;","hints":1,"solvedTime":155002,"completedWithoutSkipping":false},{"id":12,"skipped":false,"userSolution":"SELECT \n  (SELECT count(*) FROM patients WHERE gender='M') AS male_count, \n  (SELECT count(*) FROM patients WHERE gender='F') AS female_count;","hints":1,"solvedTime":273009,"completedWithoutSkipping":false},{"id":13,"skipped":false,"userSolution":"select first_name, last_name, allergies from patients where allergies in  ('Penicillin', 'Morphine')\norder by allergies, first_name, last_name asc;","hints":3,"solvedTime":1238012,"completedWithoutSkipping":true},{"id":14,"skipped":false,"userSolution":"select patient_id, diagnosis from admissions group by patient_id, diagnosis\nhaving count(*) > 1;","hints":3,"solvedTime":254000,"completedWithoutSkipping":true},{"id":15,"skipped":false,"userSolution":"SELECT\n  city,\n  COUNT(*) AS num_patients\nFROM patients\nGROUP BY city\nORDER BY num_patients DESC, city asc;","hints":1,"solvedTime":305010,"completedWithoutSkipping":false},{"id":16,"skipped":false,"userSolution":"SELECT first_name, last_name, 'Patient' as role FROM patients\n    union all\nselect first_name, last_name, 'Doctor' from doctors;","hints":1,"solvedTime":295000,"completedWithoutSkipping":false},{"id":22,"skipped":false,"userSolution":"SELECT\n  allergies,\n  COUNT(*) AS total_diagnosis\nFROM patients\nWHERE\n  allergies IS NOT NULL\nGROUP BY allergies\nORDER BY total_diagnosis DESC","hints":1,"solvedTime":47013979,"completedWithoutSkipping":false},{"id":27,"skipped":false,"userSolution":"select first_name, last_name,birth_date from patients\nwhere year(birth_date) between 1970 and 1979\norder by birth_date asc;","hints":3,"solvedTime":352008,"completedWithoutSkipping":true},{"id":28,"skipped":false,"userSolution":"select concat(upper(last_name),',', lower(first_name)) as new_name_format \nfrom patients\norder by first_name desc;","hints":3,"solvedTime":611009,"completedWithoutSkipping":true},{"id":30,"skipped":false,"userSolution":"SELECT\n  province_id,\n  SUM(height) AS sum_height\nFROM patients\nGROUP BY province_id\nHAVING sum_height >= 7000","hints":1,"solvedTime":227001,"completedWithoutSkipping":false},{"id":31,"skipped":false,"userSolution":"select max(weight)-min(weight) as weight from patients\nwhere last_name= 'Maroni';","hints":1,"solvedTime":127005,"completedWithoutSkipping":true},{"id":37,"skipped":false,"userSolution":"select day(admission_date) as day_number, count(*) as number_of_addmission\nfrom admissions\ngroup by day_number\norder by number_of_addmission desc;","hints":3,"solvedTime":435004,"completedWithoutSkipping":true},{"id":38,"skipped":false,"userSolution":"SELECT *\nFROM admissions\nWHERE patient_id = 542\nGROUP BY patient_id\nHAVING\n  admission_date = MAX(admission_date);","hints":1,"solvedTime":264005,"completedWithoutSkipping":false},{"id":40,"skipped":false,"userSolution":"SELECT\n  patient_id,\n  attending_doctor_id,\n  diagnosis\nFROM admissions\nWHERE\n  (\n    attending_doctor_id IN (1, 5, 19)\n    AND patient_id % 2 != 0\n  )\n  OR \n  (\n    attending_doctor_id LIKE '%2%'\n    AND len(patient_id) = 3\n  )","hints":1,"solvedTime":373003,"completedWithoutSkipping":false},{"id":47,"skipped":false,"userSolution":"SELECT\n  first_name,\n  last_name,\n  count(*) as admissions_total\nfrom admissions a\n  join doctors ph on ph.doctor_id = a.attending_doctor_id\ngroup by attending_doctor_id","hints":1,"solvedTime":26481987,"completedWithoutSkipping":false},{"id":48,"skipped":false,"userSolution":"select\n  doctor_id,\n  first_name || ' ' || last_name as full_name,\n  min(admission_date) as first_admission_date,\n  max(admission_date) as last_admission_date\nfrom admissions a\n  join doctors ph on a.attending_doctor_id = ph.doctor_id\ngroup by doctor_id;","hints":1,"solvedTime":616013,"completedWithoutSkipping":false},{"id":50,"skipped":false,"userSolution":"SELECT\n  province_name,\n  COUNT(*) as patient_count\nFROM patients pa\n  join province_names pr on pr.province_id = pa.province_id\ngroup by pr.province_id\norder by patient_count desc;","hints":1,"solvedTime":89764969,"completedWithoutSkipping":false},{"id":51,"skipped":false,"userSolution":"select \n\tconcat(patients.first_name,' ',patients.last_name) as patients_name, \n\tdiagnosis,\n    concat(doctors.first_name,' ',doctors.last_name) as doctors_name\n    from patients \njoin admissions  on admissions.patient_id =  patients.patient_id\njoin doctors  on doctors.doctor_id = admissions.attending_doctor_id;","hints":1,"solvedTime":430000,"completedWithoutSkipping":false},{"id":54,"skipped":false,"userSolution":"select first_name, last_name, count(*) as number_of_duplicate \nfrom patients\ngroup by first_name, last_name\nhaving  count(*)>1;","hints":1,"solvedTime":278016,"completedWithoutSkipping":false},{"id":55,"skipped":false,"userSolution":"select\n    concat(first_name, ' ', last_name) AS 'patient_name', \n    ROUND(height / 30.48, 1) as 'height \"Feet\"', \n    ROUND(weight * 2.205, 0) AS 'weight \"Pounds\"', birth_date,\nCASE\n\tWHEN gender = 'M' THEN 'MALE' \n  ELSE 'FEMALE' \nEND AS 'gender_type'\nfrom patients","hints":1,"solvedTime":116009,"completedWithoutSkipping":false},{"id":70,"skipped":false,"userSolution":"SELECT\n  patients.patient_id,\n  first_name,\n  last_name\nfrom patients\nwhere patients.patient_id not in (\n    select admissions.patient_id\n    from admissions\n  )","hints":1,"solvedTime":561000,"completedWithoutSkipping":false},{"id":17,"skipped":false,"userSolution":"SELECT\n  COUNT(*) AS patients_in_group,\n  FLOOR(weight / 10) * 10 AS weight_group\nFROM patients\nGROUP BY weight_group\nORDER BY weight_group DESC;","hints":1,"solvedTime":65002,"completedWithoutSkipping":false},{"id":18,"skipped":false,"userSolution":"SELECT patient_id, weight, height, \n  (CASE \n      WHEN weight/(POWER(height/100.0,2)) >= 30 THEN\n          1\n      ELSE\n          0\n      END) AS isObese\nFROM patients;","hints":1,"solvedTime":33009,"completedWithoutSkipping":false},{"id":19,"skipped":false,"userSolution":"SELECT\n  p.patient_id,\n  p.first_name AS patient_first_name,\n  p.last_name AS patient_last_name,\n  ph.specialty AS attending_doctor_specialty\nFROM patients p\n  JOIN admissions a ON a.patient_id = p.patient_id\n  JOIN doctors ph ON ph.doctor_id = a.attending_doctor_id\nWHERE\n  ph.first_name = 'Lisa' and\n  a.diagnosis = 'Epilepsy'","hints":1,"solvedTime":24002,"completedWithoutSkipping":false},{"id":20,"skipped":false,"userSolution":"SELECT\n  DISTINCT P.patient_id,\n  CONCAT(\n    P.patient_id,\n    LEN(last_name),\n    YEAR(birth_date)\n  ) AS temp_password\nFROM patients P\n  JOIN admissions A ON A.patient_id = P.patient_id","hints":1,"solvedTime":33000,"completedWithoutSkipping":false},{"id":21,"skipped":false,"userSolution":"select 'No' as has_insurance, count(*) * 50 as cost\nfrom admissions where patient_id % 2 = 1 group by has_insurance\nunion\nselect 'Yes' as has_insurance, count(*) * 10 as cost\nfrom admissions where patient_id % 2 = 0 group by has_insurance","hints":1,"solvedTime":30008,"completedWithoutSkipping":false},{"id":25,"skipped":false,"userSolution":"SELECT *\nFROM patients\nWHERE\n  first_name LIKE '__r%'\n  AND gender = 'F'\n  AND MONTH(birth_date) IN (2, 5, 12)\n  AND weight BETWEEN 60 AND 80\n  AND patient_id % 2 = 1\n  AND city = 'Kingston';","hints":1,"solvedTime":42000,"completedWithoutSkipping":false},{"id":24,"skipped":false,"userSolution":"SELECT pr.province_name\nFROM patients AS pa\n  JOIN province_names AS pr ON pa.province_id = pr.province_id\nGROUP BY pr.province_name\nHAVING\n  COUNT( CASE WHEN gender = 'M' THEN 1 END) > COUNT( CASE WHEN gender = 'F' THEN 1 END);","hints":1,"solvedTime":33001,"completedWithoutSkipping":false},{"id":26,"skipped":false,"userSolution":"SELECT CONCAT(\n    ROUND(\n      (\n        SELECT COUNT(*)\n        FROM patients\n        WHERE gender = 'M'\n      ) / CAST(COUNT(*) as float),\n      4\n    ) * 100,\n    '%'\n  ) as percent_of_male_patients\nFROM patients;","hints":1,"solvedTime":42007,"completedWithoutSkipping":false},{"id":44,"skipped":false,"userSolution":"SELECT\n admission_date,\n count(admission_date) as admission_day,\n count(admission_date) - LAG(count(admission_date)) OVER(ORDER BY admission_date) AS admission_count_change \nFROM admissions\n group by admission_date","hints":1,"solvedTime":23001,"completedWithoutSkipping":false},{"id":53,"skipped":false,"userSolution":"select province_name\nfrom province_names\norder by\n  (case when province_name = 'Ontario' then 0 else 1 end),\n  province_name","hints":1,"solvedTime":12014,"completedWithoutSkipping":false},{"id":69,"skipped":false,"userSolution":"SELECT\n  d.doctor_id as doctor_id,\n  CONCAT(d.first_name,' ', d.last_name) as doctor_name,\n  d.specialty,\n  YEAR(a.admission_date) as selected_year,\n  COUNT(*) as total_admissions\nFROM doctors as d\n  LEFT JOIN admissions as a ON d.doctor_id = a.attending_doctor_id\nGROUP BY\n  doctor_name,\n  selected_year\nORDER BY doctor_id, selected_year","hints":1,"solvedTime":12001,"completedWithoutSkipping":false}],"autoRun":false,"autocomplete":true,"editorFontSize":16,"persistEditorText":false,"editorText":"SELECT * FROM patients\n\n\n \n -- Show first name, last name, and gender of patients whose gender is 'M'\n \nselect \n\tfirst_name, \n    last_name, \n    gender \nfrom patients where gender = 'M';\n\n\n-- Show first name and last name of patients who does not have allergies. (null)\n\nselect \n\tfirst_name, \n    last_name from patients \n    where  allergies IS null;\n\n-- Show first name of patients that start with the letter 'C'\n\nselect \n\tfirst_name \n    from patients \n    where first_name \nLIKE 'c%';\n\n-- Show first name and last name of patients that weight within the range of 100 to 120 (inclusive)\nselect first_name, last_name from patients\nwhere weight between 100 AND 120;\n\n-- Update the patients table for the allergies column. If the patient's allergies is null then replace it with 'NKA'\n\n\nupdate patients SET allergies= 'NKA'  where allergies IS null;\n\n-- Show first name and last name concatinated into one column to show their full name.\n\nSELECT\n  CONCAT(first_name, ' ', last_name) AS full_name\nFROM patients;\n\n-- Show first name, last name, and the full province name of each patient.\n\n\nselect first_name, last_name, province_name from patients\njoin province_names on province_names.province_id = patients.province_id;\n\n\n-- Show how many patients have a birth_date with 2010 as the birth year.\n\nselect count(*) from patients where year(birth_date) = 2010;\n\n\n-- Show the first_name, last_name, and height of the patient with the greatest height.\nselect first_name, last_name,max(height) from patients;\n\n\n\n-- Show all columns for patients who have one of the following patient_ids: 1,45,534,879,1000\n\nselect * from patients where patient_id in (1,45,534,879,1000);\n\n\n-- Show the total number of admissions\n\nselect count(patient_id) from admissions;\n\n\n-- Show all the columns from admissions where the patient was admitted and discharged on the same day.\n\nselect * from admissions where admission_date = discharge_date;\n\n-- Show the patient id and the total number of admissions for patient_id 579.\nselect patient_id, count(patient_id) from admissions where patient_id = 579;\n\n\n-- Based on the cities that our patients live in, show unique cities that are in province_id 'NS'?\n\nselect distinct(city) from patients where province_id = 'NS';\n\n-- Write a query to find the first_name, last name and birth date of patients who has height greater than 160 and weight greater than 70\n\nselect first_name, last_name, birth_date from patients\nwhere height > 160 and weight > 70;\n\n\n\n-- Write a query to find list of patients first_name, last_name, and allergies where allergies are not null and are from the city of 'Hamilton'\n\nselect first_name, last_name, allergies from patients \nwhere allergies not null and city= 'Hamilton';\n\n\n-- Show unique birth years from patients and order them by ascending.\nselect distinct(year(birth_date)) from  patients  order by birth_date asc;\n\n-- Show unique first names from the patients table which only occurs once in the list.\n\n-- For example, if two or more people are named 'John' in the first_name column then don't include their name in the output list. \n-- If only 1 person is named 'Leo' then include them in the output.\n\nSELECT first_name\nFROM patients\nGROUP BY first_name\nHAVING COUNT(first_name) = 1;\n\n-- Show patient_id and first_name from patients where their first_name start and ends with 's' and is at least 6 characters long.\nselect patient_id, first_name from patients \nwhere first_name like 's____%s';\n\n-- Show patient_id, first_name, last_name from patients whos diagnosis is 'Dementia'.\n\n\nSELECT\n  patients.patient_id,\n  first_name,\n  last_name\nFROM patients\n  JOIN admissions ON admissions.patient_id = patients.patient_id\nWHERE diagnosis = 'Dementia';\n\n\n-- Display every patient's first_name.\n-- Order the list by the length of each name and then by alphabetically.\n\nselect first_name from patients order by len(first_name), first_name asc;\n\n\n\n--Show the total amount of male patients and the total amount of female patients in the patients table.\n--Display the two results in the same row.\n\nSELECT \n  (SELECT count(*) FROM patients WHERE gender='M') AS male_count, \n  (SELECT count(*) FROM patients WHERE gender='F') AS female_count;\n  \n  \n  -- Show first and last name, allergies from patients which have allergies to \n  --either 'Penicillin' or 'Morphine'. Show results ordered ascending by allergies then by first_name then by last_name.\n\n\nselect first_name, last_name, allergies from patients where allergies in  ('Penicillin', 'Morphine')\norder by allergies, first_name, last_name asc;\n\n\n\n-- Show patient_id, diagnosis from admissions. Find patients admitted multiple times for the same diagnosis.\n\nselect patient_id, diagnosis from admissions group by patient_id, diagnosis\nhaving count(*) > 1;\n \n \n-- Show the city and the total number of patients in the city.\n-- Order from most to least patients and then by city name ascending.\n\nSELECT\n  city,\n  COUNT(*) AS num_patients\nFROM patients\nGROUP BY city\nORDER BY num_patients DESC, city asc;\n\n\n-- Show first name, last name and role of every person that is either patient or doctor.\n--The roles are either \"Patient\" or \"Doctor\"\n\nSELECT first_name, last_name, 'Patient' as role FROM patients\n    union all\nselect first_name, last_name, 'Doctor' from doctors;\n\n\n\n-- Show all allergies ordered by popularity. Remove NULL values from query.\n\nSELECT\n  allergies,\n  COUNT(*) AS total_diagnosis\nFROM patients\nWHERE\n  allergies IS NOT NULL\nGROUP BY allergies\nORDER BY total_diagnosis DESC\n\n\n\n\n--Show all patient's first_name, last_name, and birth_date who were born in the 1970s decade. Sort the list starting from the earliest birth_date.\n\n\nselect first_name, last_name,birth_date from patients\nwhere year(birth_date) between 1970 and 1979\norder by birth_date asc;\n\n\n\n-- We want to display each patient's full name in a single column. Their last_name in all upper letters must appear first, then first_name in all lower case letters. Separate the last_name and first_name with a comma. Order the list by the first_name in decending order\n--EX: SMITH,jane\n\n\nselect concat(upper(last_name),',', lower(first_name)) as new_name_format \nfrom patients\norder by first_name desc;\n\n\n-- Show the province_id(s), sum of height; where the total sum of its patient's height is greater than or equal to 7,000.\n\n\nSELECT\n  province_id,\n  SUM(height) AS sum_height\nFROM patients\nGROUP BY province_id\nHAVING sum_height >= 7000\n\n\n-- Show the difference between the largest weight and smallest weight for patients with the last name 'Maroni'\n\n\nselect max(weight)-min(weight) as weight from patients\nwhere last_name= 'Maroni';\n\n\n\n-- Show all of the days of the month (1-31) and how many admission_dates occurred on that day. Sort by the day with most admissions to least admissions.\n\n\nselect day(admission_date) as day_number, count(*) as number_of_addmission\nfrom admissions\ngroup by day_number\norder by number_of_addmission desc;\n\n\n--Show all columns for patient_id 542's most recent admission_date.\n\nSELECT *\nFROM admissions\nWHERE patient_id = 542\nGROUP BY patient_id\nHAVING\n  admission_date = MAX(admission_date);\n  \n  \n  \n  \n  --Show patient_id, attending_doctor_id, and diagnosis for admissions that match one of the two criteria:\n--1. patient_id is an odd number and attending_doctor_id is either 1, 5, or 19.\n--2. attending_doctor_id contains a 2 and the length of patient_id is 3 characters.\n  \n  \n  SELECT\n  patient_id,\n  attending_doctor_id,\n  diagnosis\nFROM admissions\nWHERE\n  (\n    attending_doctor_id IN (1, 5, 19)\n    AND patient_id % 2 != 0\n  )\n  OR \n  (\n    attending_doctor_id LIKE '%2%'\n    AND len(patient_id) = 3\n  )\n  \n  \n  -- Show first_name, last_name, and the total number of admissions attended for each doctor.\n--Every admission has been attended by a doctor.\n\n\nSELECT\n  first_name,\n  last_name,\n  count(*) as admissions_total\nfrom admissions a\n  join doctors ph on ph.doctor_id = a.attending_doctor_id\ngroup by attending_doctor_id\n\n\n-- For each doctor, display their id, full name, and the first and last admission date they attended.\n\n\n \n select\n  doctor_id,\n  first_name || ' ' || last_name as full_name,\n  min(admission_date) as first_admission_date,\n  max(admission_date) as last_admission_date\nfrom admissions a\n  join doctors ph on a.attending_doctor_id = ph.doctor_id\ngroup by doctor_id;\n\n\n\n-- Display the total amount of patients for each province. Order by descending.\n\n\nSELECT\n  province_name,\n  COUNT(*) as patient_count\nFROM patients pa\n  join province_names pr on pr.province_id = pa.province_id\ngroup by pr.province_id\norder by patient_count desc;\n\n\n-- For every admission, display the patient's full name, \n--their admission diagnosis, and their doctor's full name who diagnosed their problem.\n\n\n\nselect \n\tconcat(patients.first_name,' ',patients.last_name) as patients_name, \n\tdiagnosis,\n    concat(doctors.first_name,' ',doctors.last_name) as doctors_name\n    from patients \njoin admissions  on admissions.patient_id =  patients.patient_id\njoin doctors  on doctors.doctor_id = admissions.attending_doctor_id;\n\n\n-- display the first name, last name and number of duplicate patients based on their first name and last name.\n--Ex: A patient with an identical name can be considered a duplicate.\n\nselect first_name, last_name, count(*) as number_of_duplicate \nfrom patients\ngroup by first_name, last_name\nhaving  count(*)>1;\n\n\n\n\n-- Display patient's full name,\n-- height in the units feet rounded to 1 decimal,\n-- weight in the unit pounds rounded to 0 decimals,\n-- birth_date,\n-- gender non abbreviated.\n\n-- Convert CM to feet by dividing by 30.48.\n-- Convert KG to pounds by multiplying by 2.205.\n\n\n\nselect\n    concat(first_name, ' ', last_name) AS 'patient_name', \n    ROUND(height / 30.48, 1) as 'height \"Feet\"', \n    ROUND(weight * 2.205, 0) AS 'weight \"Pounds\"', birth_date,\nCASE\n\tWHEN gender = 'M' THEN 'MALE' \n  ELSE 'FEMALE' \nEND AS 'gender_type'\nfrom patients\n\n\n\n-- Show patient_id, first_name, last_name from patients whose does not have any records in the admissions table. (Their patient_id does not exist in any admissions.patient_id rows.)\n\n\nSELECT\n  patients.patient_id,\n  first_name,\n  last_name\nfrom patients\nwhere patients.patient_id not in (\n    select admissions.patient_id\n    from admissions\n  )\n  \n  \n  \n  -- Show all of the patients grouped into weight groups.\n-- Show the total amount of patients in each weight group.\n-- Order the list by the weight group decending.\n\n-- For example, if they weight 100 to 109 they are placed in the 100 weight group, 110-119 = 110 weight group, etc.\n\n\nSELECT\n  COUNT(*) AS patients_in_group,\n  FLOOR(weight / 10) * 10 AS weight_group\nFROM patients\nGROUP BY weight_group\nORDER BY weight_group DESC;\n\n\n-- Show patient_id, weight, height, isObese from the patients table.\n\n-- Display isObese as a boolean 0 or 1.\n\n-- Obese is defined as weight(kg)/(height(m)2) >= 30.\n\n-- weight is in units kg.\n\n-- height is in units cm.\n\n\nSELECT patient_id, weight, height, \n  (CASE \n      WHEN weight/(POWER(height/100.0,2)) >= 30 THEN\n          1\n      ELSE\n          0\n      END) AS isObese\nFROM patients;\n\n\n-- Show patient_id, first_name, last_name, and attending doctor's specialty.\n--Show only the patients who has a diagnosis as 'Epilepsy' and the doctor's first name is 'Lisa'\n\n-- Check patients, admissions, and doctors tables for required information.\n\n\n\nSELECT\n  p.patient_id,\n  p.first_name AS patient_first_name,\n  p.last_name AS patient_last_name,\n  ph.specialty AS attending_doctor_specialty\nFROM patients p\n  JOIN admissions a ON a.patient_id = p.patient_id\n  JOIN doctors ph ON ph.doctor_id = a.attending_doctor_id\nWHERE\n  ph.first_name = 'Lisa' and\n  a.diagnosis = 'Epilepsy'\n  \n  \n  \n --  All patients who have gone through admissions, can see their medical documents on our site. Those patients are given a temporary password after their first admission. Show the patient_id and temp_password.\n\n-- The password must be the following, in order:\n-- 1. patient_id\n-- 2. the numerical length of patient's last_name\n-- 3. year of patient's birth_date\n\n\nSELECT\n  DISTINCT P.patient_id,\n  CONCAT(\n    P.patient_id,\n    LEN(last_name),\n    YEAR(birth_date)\n  ) AS temp_password\nFROM patients P\n  JOIN admissions A ON A.patient_id = P.patient_id\n  \n  \n  \n  --Each admission costs $50 for patients without insurance, and $10 for patients with insurance. All patients with an even patient_id have insurance.\n\n-- Give each patient a 'Yes' if they have insurance, and a 'No' if they don't have insurance. Add up the admission_total cost for each has_insurance group.\n\n\nselect 'No' as has_insurance, count(*) * 50 as cost\nfrom admissions where patient_id % 2 = 1 group by has_insurance\nunion\nselect 'Yes' as has_insurance, count(*) * 10 as cost\nfrom admissions where patient_id % 2 = 0 group by has_insurance\n\n\n-- Show the provinces that has more patients identified as 'M' than 'F'. Must only show full province_name\n\nSELECT pr.province_name\nFROM patients AS pa\n  JOIN province_names AS pr ON pa.province_id = pr.province_id\nGROUP BY pr.province_name\nHAVING\n  COUNT( CASE WHEN gender = 'M' THEN 1 END) > COUNT( CASE WHEN gender = 'F' THEN 1 END);\n\n\n-- Show the percent of patients that have 'M' as their gender. Round the answer to the nearest hundreth number and in percent form.\n\n\nSELECT CONCAT(\n    ROUND(\n      (\n        SELECT COUNT(*)\n        FROM patients\n        WHERE gender = 'M'\n      ) / CAST(COUNT(*) as float),\n      4\n    ) * 100,\n    '%'\n  ) as percent_of_male_patients\nFROM patients;\n\n\n\n-- For each day display the total amount of admissions on that day. Display the amount changed from the previous date.\n\n\nSELECT\n admission_date,\n count(admission_date) as admission_day,\n count(admission_date) - LAG(count(admission_date)) OVER(ORDER BY admission_date) AS admission_count_change \nFROM admissions\n group by admission_date\n \n \n -- Sort the province names in ascending order in such a way that the province 'Ontario' is always on top.\n\n\nselect province_name\nfrom province_names\norder by\n  (case when province_name = 'Ontario' then 0 else 1 end),\n  province_name\n  \n  \n  -- We need a breakdown for the total amount of admissions each doctor has started each year. Show the doctor_id, doctor_full_name, specialty, year, total_admissions for that year.\n\n\nSELECT\n  d.doctor_id as doctor_id,\n  CONCAT(d.first_name,' ', d.last_name) as doctor_name,\n  d.specialty,\n  YEAR(a.admission_date) as selected_year,\n  COUNT(*) as total_admissions\nFROM doctors as d\n  LEFT JOIN admissions as a ON d.doctor_id = a.attending_doctor_id\nGROUP BY\n  doctor_name,\n  selected_year\nORDER BY doctor_id, selected_year","queryTimes":[{"id":0,"time":411009},{"id":1,"time":16329995},{"id":2,"time":513000},{"id":3,"time":850000},{"id":4,"time":157006},{"id":5,"time":253001},{"id":6,"time":305003},{"id":23,"time":3374994},{"id":33,"time":130000},{"id":34,"time":113001},{"id":35,"time":60008},{"id":41,"time":88002},{"id":42,"time":255001},{"id":32,"time":102002},{"id":45,"time":105014},{"id":46,"time":204000},{"id":7,"time":217000},{"id":8,"time":8965995},{"id":9,"time":176004},{"id":10,"time":4650002},{"id":11,"time":155002},{"id":12,"time":273009},{"id":13,"time":1238012},{"id":14,"time":254000},{"id":15,"time":305010},{"id":16,"time":295000},{"id":22,"time":47013979},{"id":27,"time":352008},{"id":28,"time":611009},{"id":30,"time":227001},{"id":31,"time":127005},{"id":37,"time":435004},{"id":38,"time":264005},{"id":40,"time":373003},{"id":47,"time":26481987},{"id":48,"time":616013},{"id":50,"time":89764969},{"id":51,"time":430000},{"id":54,"time":278016},{"id":55,"time":116009},{"id":70,"time":561000},{"id":17,"time":65002},{"id":18,"time":33009},{"id":19,"time":24002},{"id":20,"time":33000},{"id":21,"time":30008},{"id":24,"time":33001},{"id":25,"time":42000},{"id":26,"time":42007},{"id":44,"time":23001},{"id":53,"time":12014},{"id":69,"time":12001}],"filterState":{"selectedKeywordFilter":"ALL","selectedDifficultyFilter":"ALL","selectedCompletedFilter":"ALL","selectedDatabaseFilter":"Hospital"}}